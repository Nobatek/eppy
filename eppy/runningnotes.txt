
rsync -av --exclude=".*" eplusinterface_diagrams/ ./eppy_0_4_0

2015-07-07
----------
make brandh i39_python3 for 

2015-05-26
----------
Have a toggle that can force the line endings
idf.save(lineendings='default')
idf.saveas(fname, lineendings='default')

2014-08-05
----------
eppy can read fields dos path names with backslash '\' 
2014-08-04
----------
ran test for checking if eppy is reading all example files.
on a mac under EnergyPlus-8-1-0, the following files failed the read:

- 12 False 4ZoneWithShading_Simple_1.idf
- 13 False 4ZoneWithShading_Simple_2.idf
the above two files used a keyword "End Lead Input" 
the keyword was not in the IDD file. So it failed

- 168 False EMSUserDefined5ZoneAirCooled.idf
- 169 False EMSUserDefinedWindACAuto.idf
- 225 False HospitalBaselineReheatReportEMS.idf
- 355 False RetailPackagedTESCoil.idf
the above 4 files used extended fields
while testing the idd did not have the extended fields
So they failed

2013-12-21
----------
on testing with issue13 updates, ony three files could not be read:
['./issue13/LookupTables.idf', 
    './issue13/RefrigeratedWarehouse.idf',
    './issue13/RetailPackagedTESCoil.idf']
this is because they have the object "TABLE:MULTIVARIABLELOOKUP" 
This object can be read in version 8.1 onwards.
Now the code will have to check the version :-( for backward compatibility
How and where can I do that.
2013-12-20
----------
issue 13
see slashcomment.py
fixed by change in parse_idd
test by converting files in example set and comaring input and output.
Do this using master and branch issue13
2013-12-11
----------
working towards release 0.4.5
- update the fixed idd file version 8.
- update docs for new changes
- include function docs in sphinx
- release on git hub and on pypi


2013-10-03
----------
l = [1,2,3]
pop -> popidfobject(index)
remove -> removeidfobject(idfobject)
append -> appendidfobject(idfobject)
newidfobject(key) will append a brand new idf object

2013-10-02
----------
EpBunch.area does not pass an arg to the function.
How can I pass an arg to the function. - DONE
    for example EpBunch.checkrange(fieldname)

2013-09-25
----------
update by stephan

2013-09-24
----------
pytest will go above the last folder with __init__.py for an import
This will make the imports work correctly.

2013-09-21
----------
keep the remaining docs (loops and readhtml)
focus on development. 

2013-09-21
----------
made branch -> almost_master
This shouuld really be master, but I am not sure.
made brancch -> develop (made it now)
All development should be done here

2013-09-21
----------
notes on overriding list
- __add__ override ?
- __delattr__ remove some attributes ?
- __delitems__ overide ?
- __overide __delslce__ ?
- __iadd__ override?
- __mul__ override ?
- __setitem__ overide ?
- __setslice__ overide ?

2013-09-19
----------
TODO 
- tutorial for condensor loop and airside loop
- seperate tutorial on readhtml
- nedd a function that will do:
	idf.idfobjects[key].pop(0)
- 
- articulate the thinking on the software orgainzation.
	- the core code deals only with objects and fields
	- readhtml is a seperate package (for output reading)
	- buildhvac would be a seperate package
	-
	- these packages would have seperate tutorials



2013-09-03
----------
try import numpy
exception error message

pyparsing: give path name to 1.5 version

ex_loopdiagram.py does not do ideal loads systems - worth including this
2013-09-01
----------
Try to use this to work on a real project
branch to frog_impact

for sphinx:
- make html # I need to get the docs to go t a specific folder.

add to docstring:
- IDF class variables to be documented in the doc string.
- EpBunch variables also to be documented in doc string
2013-08-31
----------
registered at PyPi
- works with pip install eppy
needs a lot of fixes:
- tutorial is not current

.pypirc
[server-login]
username: santoshphilip
password: *********

from <http://www.jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/>
python setup.py register
python setup.py sdist upload

2013-08-25
----------
- don't add any enhancements to code
- get this ready for release
- work a bit on coverage
- get tests working from setup.py test
- do documentation from sphinx
- do readthedocs
- finally use cookie cutter
2013-08-25
----------
used test coverage from
http://www.jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/
need to follow up on this long term.

2013-07-21
----------
For graphs see
http://bl.ocks.org/mbostock/4015254
2013-07-21
----------
windows virtual install
- pip install virtualenv
- pip install virtualenvwrapper-win
2013-07-03
----------
copy an object from within the idf
copy an object from another idef
2013-06-21
----------
update all ex_*.py files to using IDF
or
archive them and make IDF using files
- do rename
- update the print
- update docs
- 
2013-06-11
----------
- build a branch with a list of components -> close to done -> DONE
- replace existing branch with new branch -> close to done -> DONE
-
- link to commdct in epbunch -> DONE
2013-05-31
----------
rname the repository into eppy
branch master into eplus_diagrams
eppy branch is default
make eppybranch the mastert
2013-05-27
----------
back to hvac loops
- need to make a pipe component in hvacbuilder.makeplantloop - DONE
2013-05-26
----------
I think d_newread.py is working. 
Reads idd only once.
    from fhandle and filename
put idd in a module and try to do pytests with that, reading the idd only once.
    DONE
2013-05-12
----------
IIDF now reads idd only once
it works with iddfilename, but not with iddfilehandle :-(
see d_newread.py
compare theidd (from readidf.readdatacommdct) in d_newread.py and d_filehandle.py
2013-05-09
----------
- IDF.setiddname(fhandle)
    this is failing because, fhandle is getting exhausted
    fhandle should get used only once. - how to do this ?
moke the pipe objects.
check if a new object can be made with named arguments. DONE
- fix the pytest that read a file
2013-05-08
----------
- fix makeplantloop to have make objects.
- make IDF.newidfobject with 


when you rename nodes do:
obj.nodefield = [oldnodename, newodename]
Then you can find the occurance of the old names in other places.

node rename
- exception at loop endpoints.
- How to identify them.
updatebranch(loop, branch, [c1, c2, c3, c4])
getinletname(loop, branch, c1) -> maybe None
getoutletname(loop, branch, c1) -> maybe None
do standard node name change
If None:
    replace that nodename
else:
    pass
    
    
2013-05-05
----------
branch
[] -> [p0]

[p0] -> [p1]
[p0] -> [p0, p1]
[p0] -> [p1, p0]

[p0, p1] -> [pn, p1]
[p0, p1] -> [p0, pn]
[p0, p1] -> [pn, p0, p1]
[p0, p1] -> [p0, p1, pn]
[p0, p1, p2] -> [p0, pn, p1, p2]

OR

replace the contents of the branch with a new list of components
[pump, chiller, coil] -> these items are EpBunch objects.
two options:
- rename all the nodes logically. 
    - 
    Problem is that nodes may be referred to at the controls. 